# ============================================================
# MongoDB 数据库同步工具 - 配置文件示例
# ============================================================
#
# 使用说明：
# 1. 复制此文件：cp .env.example .env
# 2. 填入实际配置值
# 3. 或使用命令行参数代替（优先级更高）
#
# 注意：
# - 不要提交包含真实密码的 .env 文件到 Git
# - 命令行参数会覆盖此文件中的配置
# - 不使用的配置项可以留空或删除
#
# ============================================================

# ==================== 远程数据库配置 ====================
# 生产环境或源数据库

REMOTE_HOST=your-remote-host.com
REMOTE_PORT=27017
REMOTE_USER=your-username
REMOTE_PASS=your-password
REMOTE_DB=your-database
REMOTE_AUTH_SOURCE=admin

# ==================== 本地数据库配置 ====================
# 开发环境或目标数据库

LOCAL_HOST=localhost
LOCAL_PORT=27017
LOCAL_USER=
LOCAL_PASS=
LOCAL_DB=your-database
LOCAL_AUTH_SOURCE=admin

# ==================== 同步模式 ====================
# 可选值：collection | database | instance | incremental
# - collection: 同步指定集合
# - database: 同步整个数据库
# - instance: 同步所有数据库
# - incremental: 增量同步

MODE=database

# ==================== 同步目标 ====================

# 指定要同步的集合（逗号分隔，留空则同步所有集合）
# 示例：users,orders,products
COLLECTIONS=

# 指定要同步的数据库（逗号分隔，用于多数据库同步）
# 示例：myapp,analytics,logs
DATABASES=

# 排除的集合（逗号分隔）
# 示例：temp,cache,sessions
EXCLUDE_COLLECTIONS=

# 排除的数据库（逗号分隔，用于实例同步）
# 示例：test,backup,temp
EXCLUDE_DATABASES=

# ==================== 同步选项 ====================

# 批量插入大小（默认：1000）
# 小文档建议：2000-5000
# 大文档建议：100-500
BATCH_SIZE=1000

# 同步前是否删除本地数据（true/false）
# ⚠️ 警告：true 会删除本地集合的所有数据
DROP_LOCAL=false

# 模拟运行，不实际写入数据（true/false）
# 用于测试配置是否正确
DRY_RUN=false

# ==================== 增量同步配置 ====================
# 仅在 MODE=incremental 时有效

# 时间戳字段名（用于判断数据是否更新）
# 常见字段名：updatedAt, updated_at, modifiedAt, lastModified
TIMESTAMP_FIELD=updatedAt

# 同步起始时间（ISO 格式，留空则自动检测）
# 格式：YYYY-MM-DDTHH:mm:ss.sssZ
# 示例：2025-01-20T00:00:00.000Z
SINCE=

# ==================== 过滤条件 ====================
# MongoDB 查询条件（JSON 格式）
# 只同步符合条件的文档

# 示例 1：只同步活跃用户
# FILTER={"status":"active"}

# 示例 2：只同步最近的数据
# FILTER={"createdAt":{"$gte":"2025-01-01"}}

# 示例 3：复杂条件
# FILTER={"status":"active","type":{"$in":["premium","vip"]}}

FILTER=

# ==================== 配置示例 ====================

# 示例 1：同步生产环境的 users 集合到本地
# REMOTE_HOST=prod.example.com
# REMOTE_USER=admin
# REMOTE_PASS=secret123
# REMOTE_DB=myapp
# LOCAL_DB=myapp_dev
# MODE=collection
# COLLECTIONS=users
# DROP_LOCAL=true

# 示例 2：同步整个数据库
# REMOTE_HOST=prod.example.com
# REMOTE_USER=admin
# REMOTE_PASS=secret123
# REMOTE_DB=myapp
# LOCAL_DB=myapp_dev
# MODE=database

# 示例 3：增量同步最近 7 天的数据
# REMOTE_HOST=prod.example.com
# REMOTE_USER=admin
# REMOTE_PASS=secret123
# REMOTE_DB=myapp
# LOCAL_DB=myapp_dev
# MODE=incremental
# TIMESTAMP_FIELD=updatedAt
# SINCE=2025-01-14T00:00:00.000Z

# 示例 4：同步整个实例，排除测试数据库
# REMOTE_HOST=prod.example.com
# REMOTE_USER=admin
# REMOTE_PASS=secret123
# MODE=instance
# EXCLUDE_DATABASES=test,backup,temp

# ============================================================
# 使用技巧
# ============================================================
#
# 1. 测试配置：
#    npm run sync -- --dry-run
#
# 2. 命令行参数优先级更高：
#    npm run sync -- --db myapp --collections users
#    （会覆盖 .env 中的配置）
#
# 3. 查看所有配置选项：
#    npm run help
#
# 4. 运行示例代码学习：
#    npm run example:collection
#    npm run example:database
#    npm run example:incremental
#
# ============================================================
